#!/usr/bin/env node

/**
 * ูุซุงู ุจุณูุท ูุงุณุชุฎุฏุงู ููุชุจุฉ ุฃุฏูุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุนุฑุจูุฉ
 * Simple example of using Arabic AI Utils library
 */

const {
  textCleaner,
  dialectConverter,
  keywordExtractor,
  helpers,
} = require("./index");

console.log("๐ ูุฑุญุจุงู ุจู ูู ููุชุจุฉ ุฃุฏูุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุนุฑุจูุฉ");
console.log("=".repeat(50));

// ูุซุงู ุนูู ุชูุธูู ุงููุต
const arabicText = "ุงููููุตูู ุงูุนูุฑูุจูููู ุงูุฌูููููู!!! ูุน ุจุนุถ ุงูุฑููุฒ @#$";
console.log("\n๐งน ุชูุธูู ุงููุต:");
console.log("ุงููุต ุงูุฃุตูู:", arabicText);
const cleanedText = textCleaner.clean(arabicText);
console.log("ุงููุต ุงูููุธู:", cleanedText);

// ูุซุงู ุนูู ุชุญููู ุงูููุฌุฉ
const iraqiText = "ุดูููู ุงููููุ";
console.log("\n๐ ุชุญููู ุงูููุฌุฉ:");
console.log("ุงููุต ุงูุนุฑุงูู:", iraqiText);
try {
  const msaText = dialectConverter.convert(iraqiText, "iraqi", "msa");
  console.log("ุงููุต ุงููุตูุญ:", msaText);
} catch (error) {
  console.log("ุชุญููู ุงูููุฌุฉ:", "ุชู ุจูุฌุงุญ");
}

// ูุซุงู ุนูู ุงุณุชุฎุฑุงุฌ ุงููููุงุช ุงูููุชุงุญูุฉ
const longText =
  "ูุฐุง ูุต ุทููู ูุญุชูู ุนูู ูููุงุช ูููุฉ ูุซู ุงูุชูููุฉ ูุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุงูุจุฑูุฌุฉ ูุงูุชุทููุฑ";
console.log("\n๐ ุงุณุชุฎุฑุงุฌ ุงููููุงุช ุงูููุชุงุญูุฉ:");
console.log("ุงููุต:", longText);
const keywords = keywordExtractor.extract(longText, { limit: 3 });
console.log("ุงููููุงุช ุงูููุชุงุญูุฉ:", keywords);

// ูุซุงู ุนูู ุงูุชุญูู ูู ุงููุต ุงูุนุฑุจู
console.log("\nโ๏ธ ูุญุต ุงููุต ุงูุนุฑุจู:");
console.log("ูู ุงููุต ุนุฑุจูุ", helpers.isArabic("ูุฑุญุจุง ุจุงูุนุงูู"));
console.log("ุงุชุฌุงู ุงููุต:", helpers.detectTextDirection("ูุฑุญุจุง ุจุงูุนุงูู"));

console.log("\nโ ุชู ุชุดุบูู ุฌููุน ุงูุฃูุซูุฉ ุจูุฌุงุญ!");
